name: Multi Docker Image Build and Push to ECR

on:
  push:
    branches: ["compose-dhlee"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 소스코드 체크아웃
        uses: actions/checkout@v4

      - name: AWS 인증 정보 등록
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 # ← 본인 리전 코드로 바꿔!

      - name: ECR 로그인
        uses: aws-actions/amazon-ecr-login@v2

      - name: 여러 서비스 도커 이미지 빌드 & 푸시
        env:
          ECR_REGISTRY: 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com # ← 본인 정보로 바꿔!
        run: |
          SERVICES="config-service discovery-service gateway-service point-service restaurant-service review-service user-service" # ← 올릴 서비스 폴더/이름들! 직접 수정

          for SERVICE in $SERVICES
          do
            echo "===== $SERVICE 빌드 및 푸시 시작 ====="
            # 도커 빌드 (각 서비스 폴더 기준으로)
            docker build -t $SERVICE:${GITHUB_SHA} ./back/$SERVICE

            # ECR용 태그
            docker tag $SERVICE:${GITHUB_SHA} $ECR_REGISTRY/$SERVICE:${GITHUB_SHA}
            docker tag $SERVICE:${GITHUB_SHA} $ECR_REGISTRY/$SERVICE:latest

            # 푸시
            docker push $ECR_REGISTRY/$SERVICE:${GITHUB_SHA}
            docker push $ECR_REGISTRY/$SERVICE:latest
            echo "===== $SERVICE 푸시 완료 ====="
          done
      - name: config-service 배포 및 헬스체크
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 1. yml 파일 주입
            mkdir -p /home/${USER}/config-service-tmp
            cat << 'EOF' > /home/${USER}/config-service-tmp/application-dev.yml
            ${{ secrets.CONFIG_SERVICE_APP_DEV_YML }}
            EOF

            # 2. 컨테이너 배포
            docker rm -f config-service || true
            docker pull 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/config-service:latest
            docker run -d --name config-service \
              -p 8888:8888 \
              -v /home/${USER}/config-service-tmp/application-dev.yml:/app/application-dev.yml \
              908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/config-service:latest \
              --spring.profiles.active=dev

            # 3. 헬스체크 (최대 60초 대기, 2초마다 재시도)
            for i in {1..30}; do
              sleep 2
              curl -sf http://localhost:8888/actuator/health && break
              echo "Config-service 아직 준비 안됨, 재시도..."
            done
            echo "Config-service 정상 기동됨!"

      - name: discovery-service 배포 및 헬스체크
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker rm -f discovery-service || true
            docker pull 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/discovery-service:latest
            docker run -d --name discovery-service -p 8761:8761 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/discovery-service:latest

            for i in {1..30}; do
              sleep 2
              curl -sf http://localhost:8761/actuator/health && break
              echo "Discovery-service 아직 준비 안됨, 재시도..."
            done
            echo "Discovery-service 정상 기동됨!"

      - name: 나머지 서비스 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # gateway-service
            docker rm -f gateway-service || true
            docker pull 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/gateway-service:latest
            docker run -d --name gateway-service -p 8000:8000 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/gateway-service:latest

            # 나머지 서비스들
            for SERVICE in point-service restaurant-service review-service user-service
            do
              docker rm -f $SERVICE || true
              docker pull 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/$SERVICE:latest
              docker run -d --name $SERVICE 908027399356.dkr.ecr.ap-northeast-2.amazonaws.com/$SERVICE:latest
            done
